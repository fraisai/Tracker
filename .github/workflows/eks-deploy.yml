name: Node js app deploy to EKS
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Get hash of Git commit
      id: commit
      uses: prompt/actions-commit-hash@v3

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v3.0
      with:
        version: 'latest'
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push Docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPO_NAME }} # ecr repo
        IMAGE_TAG: ${{ steps.commit.outputs.short }} # tag image with short version of git commit hash code
      run: |
        echo build and tag Docker image
        docker build -t $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo push image to ECR repo
        docker push $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update kube config
      run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}
    
    - name: Deploy to EKS
      run: |
        kubectl apply -f trackr-deployment.yml
        kubectl apply -f trackr-service.yml